create table ACADEMIA (
	Numero numeric(10) not null,
	Quantidade_Equipamentos numeric(3),
	Ultima_Manutencao_Bebedouro varchar(10) not null,
	Quantidade_Chuveiros numeric(2),
	constraint ID_ACADE_DEPEN_ID primary key (Numero));

create table ACOMODACAO (
	Numero numeric(10) not null,
	Tipo varchar(20) not null,
	Valor numeric(7) not null,
	Ultima_limpeza date not null,
	constraint ID_ACOMO_DEPEN_ID primary key (Numero));

create table acumula (
	Nome varchar(30) not null,
	E_mail varchar(30) not null,
	constraint ID_acumula_ID primary key (E_mail, Nome));

create table ALIMENTO (
	Id char(10) not null,
	Nome varchar(30) not null,
	Quantidade_Desejada numeric(6),
	Quantidade_Existente numeric(6) not null,
	constraint ID_ALIMENTO_ID primary key (Id));

create table ALUGUEL (
	Id char(10) not null,
	Pag_Id char(10) not null,
	Valor_Total numeric(6,2) not null,
	Valor_Base numeric(6,2),
	Multa numeric(7),
	Data_Pagamento date not null,
	CNPJ char(18) not null,
	constraint ID_ALUGUEL_ID primary key (Id),
	constraint SID_ALUGU_ESTAB_ID unique (Pag_Id));

create table AMENIDADE (
	Tipo varchar(30) not null,
	constraint ID_AMENIDADE_ID primary key (Tipo));

create table AR_LIVRE (
	Numero numeric(6) not null,
	Churrasqueira char,
	Forno_a_Lenha char,
	Freezer char,
	constraint ID_AR_LI_ESPAC_ID primary key (Numero));

create table armazena (
	A_A_Id char(10) not null,
	Id char(10) not null,
	constraint ID_armazena_ID primary key (A_A_Id, Id));

create table ASSALARIADO (
	CPF char(14) not null,
	Horas_semana numeric(2) not null,
	Salario_Mensal numeric(7,2) not null,
	constraint ID_ASSAL_FUNCI_ID primary key (CPF));

create table AUTONOMO (
	CPF char(14) not null,
	Valor_hora numeric(6,2) not null,
	constraint ID_AUTON_FUNCI_ID primary key (CPF));

create table AUTORIZACAO (
	Id char(10) not null,
	Nec_Id char(10) not null,
	Validade date not null,
	CNPJ char(18) not null,
	constraint ID_AUTORIZACAO_ID primary key (Id),
	constraint SID_AUTOR_ESTAB_ID unique (Nec_Id));

create table BANHO_PET (
	Numero numeric(10) not null,
	Nome_Pet varchar(20),
	Telefone_Dono char(13) not null,
	m2_Agua_Gastos numeric(3) not null,
	Data date not null,
	Id char(10) not null,
	constraint ID_BANHO_PET_ID primary key (Numero));

create table beneficiado (
	CPF char(14) not null,
	Nome varchar(30) not null,
	constraint ID_beneficiado_ID primary key (CPF, Nome));

create table Beneficiados (
	CPF char(14) not null,
	Numero numeric(10) not null,
	Nome varchar(30) not null,
	constraint ID_Beneficiados_ID primary key (CPF, Numero, Nome));

create table BENEFICIO (
	Nome varchar(30) not null,
	Valor numeric(6,2) not null,
	constraint ID_BENEFICIO_ID primary key (Nome));

create table CAFE_DA_MANHA (
	Id char(10) not null,
	Reserva_de_Mesa numeric(3) not null,
	constraint ID_CAFE__COMPR_ID primary key (Id));

create table CALENDARIO (
	Dia varchar(2) not null,
	Mes numeric(2) not null,
	Numero numeric(10) not null,
	Status varchar(8) not null,
	constraint ID_CALENDARIO_ID primary key (Dia, Mes, Numero));

create table CAMPANHA (
	Id char(10) not null,
	Nome varchar(30) not null,
	Periodo varchar(20) not null,
	Objetivo varchar(40),
	Verba numeric(6,2) not null,
	Pro_Nome varchar(30) not null,
	constraint ID_CAMPANHA_ID primary key (Id));

create table CHATBOT (
	Registro_Digital varchar(10) not null,
	CNPJ char(18) not null,
	Nome_Avatar varchar(30),
	Versao varchar(8),
	constraint ID_CHATBOT_ID primary key (Registro_Digital),
	constraint SID_CHATB_REDE_ID unique (CNPJ));

create table COMPRA (
	Id char(10) not null,
	Valor numeric(6,2) not null,
	Horario char(6) not null,
	SERVICO_DE_QUARTO char(10),
	CAFE_DA_MANHA char(10),
	Numero numeric(10) not null;
	constraint ID_COMPRA_ID primary key (Id));

create table consome (
	Numero numeric(10) not null,
	Id char(10) not null,
	Dia date not null,
	Horario char(6) not null,
	Quantidade numeric(2) not null,
	constraint ID_consome_ID primary key (Id, Numero));

create table DELIVERY (
	Id char(10) not null,
	Empresa_Associada varchar(30) not null,
	Data date not null,
	Horario char(6) not null,
	Valor numeric(6,2) not null,
	Fei_Id char(10) not null,
	Numero numeric(10) not null,
	constraint ID_DELIVERY_ID primary key (Id));

create table DEPARTAMENTO (
	Numero numeric(2) not null,
	Nome varchar(30) not null,
	Id char(10) not null,
	constraint ID_DEPARTAMENTO_ID primary key (Numero));

create table DEPENDENCIA (
	Numero numeric(10) not null,
	Data_Ultima_Manutencao date not null,
	Id char(10) not null,
	SALA_EVENTOS numeric(10),
	RESTAURANTE numeric(10),
	PISCINA numeric(10),
	EMPRESA_TURISMO numeric(10),
	ACOMODACAO numeric(10),
	ACADEMIA numeric(10),
	constraint ID_DEPENDENCIA_ID primary key (Numero));

create table DEPENDENTE (
	CPF char(14) not null,
	Hospede_Principal_Responsavel char(14) not null,
	constraint ID_DEPEN_HOSPE_ID primary key (CPF));

create table dispoe_de (
	Numero numeric(10) not null,
	Tipo varchar(30) not null,
	constraint ID_dispoe_de_ID primary key (Tipo, Numero));

create table DOCUMENTO (
	Id char(10) not null,
	e_r_Id char(10) not null,
	Tipo varchar(30) not null,
	Data_Emissao date not null,
	Data_Vencimento date not null,
	constraint ID_DOCUMENTO_ID primary key (Id),
	constraint SID_DOCUM_PAGAM_ID unique (e_r_Id));

create table e_divulgada_por (
	Cpf char(14) not null,
	Nome varchar(30) not null,
	constraint ID_e_divulgada_por_ID primary key (Cpf, Nome));

create table EMPRESA_TURISMO (
	Numero numeric(10) not null,
	Nome varchar(30) not null,
	Especialidade varchar(30),
	constraint ID_EMPRE_DEPEN_ID primary key (Numero));

create table ESPACO (
	Numero numeric(6) not null,
	Nome varchar(30),
	Tamanho numeric(4) not null,
	Valor numeric(7,2) not null,
	Capacidade_Maxima numeric(4) not null,
	SALA numeric(6),
	AR_LIVRE numeric(6),
	Eng_Numero numeric(5) not null,
	constraint ID_ESPACO_ID primary key (Numero));

create table ESPACO_EVENTOS (
	Numero numeric(5) not null,
	Id char(10) not null,
	Valor numeric(7,2) not null,
	Senha_Wifi varchar(30),
	constraint ID_ESPACO_EVENTOS_ID primary key (Numero),
	constraint SID_ESPAC_HOTEL_ID unique (Id));

create table ESTABELECIMENTO (
	Id char(10) not null,
	Nome varchar(30) not null,
	Faturamento_Mensal numeric(7,2) not null,
	Numero numeric(3) not null,
	TEATRO char(10),
	LOJA char(10),
	LOCAL_ALIMENTACAO char(10),
	constraint ID_ESTABELECIMENTO_ID primary key (Id));

create table ESTADIA_ANTERIOR (
	Id char(10) not null,
	Data_Check_In char(10),
	Data_Check_Out char(10),
	Tipo_de_Hospede char(1),
	Valor_Gasto numeric(7,2),
	Unidade char(10),
	Acomodacao numeric(10),
	Pontos_Gerados numeric(6) not null,
	CNPJ char(18) not null,
	constraint ID_ESTADIA_ANTERIOR_ID primary key (Id));

create table EVENTO (
	Id char(10) not null,
	Nome varchar(30) not null,
	CPF_Responsavel char(14) not null,
	Acesso varchar(15) not null,
	Valor numeric(6,2) not null,
	Dia date not null,
	Horario char(6) not null,
	Classificacao_Indicativa varchar(5) not null,
	Numero numeric(10) not null,
	constraint ID_EVENTO_ID primary key (Id));

create table faz (
	Numero numeric(10) not null,
	Id char(10) not null,
	constraint ID_faz_ID primary key (Id, Numero));

create table FUNCIONARIO (
	CPF char(14) not null,
	Nome varchar(30) not null,
	Data_Nascimento date,
	Data_Contratacao date not null,
	Carga_Semanal numeric(2) not null,
	Genero char(1),
	Raca varchar(8),
	Cargo varchar(30) not null,
	AUTONOMO char(14),
	ASSALARIADO char(14),
	Numero numeric(2) not null,
	constraint ID_FUNCIONARIO_ID primary key (CPF));

create table GANHADOR (
	Id char(10) not null,
	Cpf char(14) not null,
	Nome varchar(30) not null,
	constraint ID_GANHADOR_ID primary key (Id, Cpf));

create table GARAGEM (
	Numero numeric(10) not null,
	Tipo varchar(20) not null,
	Capacidade_Maxima numeric(5) not null,
	Valor_Dia numeric(2,2) not null,
	Id char(10) not null,
	constraint ID_GARAGEM_ID primary key (Numero));

create table HOSPEDE (
	CPF char(14) not null,
	Nome varchar(30) not null,
	E_mail varchar(30) not null,
	Data_Nascimento date,
	Genero char(1),
	Pontuacao numeric(6) not null,
	Pod_Cpf char(14),
	PRINCIPAL char(14),
	DEPENDENTE char(14),
	CNPJ char(18) not null,
	constraint ID_HOSPEDE_ID primary key (CPF));

create table HOTEL (
	Id char(10) not null,
	Categoria varchar(20) not null,
	Estado char(2) not null,
	Cidade varchar(30) not null,
	Bairro varchar(30) not null,
	Rua varchar(34) not null,
	Numero numeric(3) not null,
	CEP char(9) not null,
	Nome_Real varchar(30) not null,
	Nome_Fantasia varchar(30) not null,
	Capacidade_Maxima numeric(6),
	Area_m2 numeric(6) not null,
	Data_Inauguracao date not null,
	CNPJ char(18) not null,
	constraint ID_HOTEL_ID primary key (Id));

create table HOTEL_EMPRESARIAL (
	Id char(10) not null,
	Quantidade_Salas_Reuniao numeric(3) not null,
	Qualidade_Wifi varchar(5) not null,
	constraint ID_HOTEL_HOTEL_3_ID primary key (Id));

create table HOTEL_FAMILIAR (
	Id char(10) not null,
	Brinquedos char(1) not null,
	Salao_de_Jogos_Infantil char(1) not null,
	constraint ID_HOTEL_HOTEL_2_ID primary key (Id));

create table HOTEL_PARA_ADULTO (
	Id char(10) not null,
	Quantidade_Bares numeric(2) not null,
	Quantidade_Saunas numeric(2) not null,
	Quantidade_Adegas numeric(2) not null,
	Salao_de_Jogos_Adultos char(1) not null,
	constraint ID_HOTEL_HOTEL_1_ID primary key (Id));

create table HOTEL_PARA_PETS (
	Id char(10) not null,
	Quantidade_Patios numeric(2) not null,
	Area_Brinquedos_Pets char(1) not null,
	constraint ID_HOTEL_HOTEL_ID primary key (Id));

create table inclui (
	For_Numero numeric(10) not null,
	Numero numeric(5) not null,
	I_A_Numero numeric(10) not null,
	Periodo numeric(3) not null,
	constraint ID_inclu_VAGA_ID primary key (For_Numero, Numero),
	constraint SID_inclu_ACOMO_ID unique (I_A_Numero));

create table INFLUENCIADOR_PARCEIRO (
	Cpf char(14) not null,
	Nome varchar(30) not null,
	Numero_Seguidores numeric(8) not null,
	Remuneracao numeric(7,2) not null,
	constraint ID_INFLUENCIADOR_PARCEIRO_ID primary key (Cpf));

create table INSTAGRAM (
	Nome varchar(30) not null,
	Frequencia_Stories varchar(10) not null,
	Frequencia_Postagens varchar(10) not null,
	constraint ID_INSTA_REDE__ID primary key (Nome));

create table LIMPEZA_DE_PELE (
	Numero char(1) not null,
	Produtos_Usados varchar(40) not null,
	constraint ID_LIMPE_TRATA_ID primary key (Numero));

create table LOBBY (
	Numero numeric(3) not null,
	Id char(10) not null,
	constraint ID_LOBBY_ID primary key (Numero),
	constraint SID_LOBBY_HOTEL_ID unique (Id));

create table LOCAL_ALIMENTACAO (
	Id char(10) not null,
	Nicho varchar(30) not null,
	constraint ID_LOCAL_ESTAB_ID primary key (Id));

create table LOJA (
	Id char(10) not null,
	Nicho varchar(30) not null,
	constraint ID_LOJA_ESTAB_ID primary key (Id));

create table MASSAGEM (
	Numero char(1) not null,
	Tipo varchar(15),
	constraint ID_MASSA_TRATA_ID primary key (Numero));

create table NOTA_FISCAL (
	Id char(10) not null,
	Valor_Total numeric(8,2) not null,
	Descontos numeric(8) not null,
	Multa numeric(8) not null,
	Data_Limite date not null,
	Quitada char(1) not null,
	CNPJ char(18) not null,
	constraint ID_NOTA_FISCAL_ID primary key (Id));

create table oferece (
	Numero numeric(10) not null,
	Nome char(1) not null,
	constraint ID_oferece_ID primary key (Nome, Numero));

create table PAGAMENTO (
	Id char(10) not null,
	Cnpj_Destinatario char(18) not null,
	Valor numeric(7,2) not null,
	Referencia varchar(30) not null,
	Data_Pagamento date not null,
	CNPJ char(18) not null,
	constraint ID_PAGAMENTO_ID primary key (Id));

create table PECA (
	Nome varchar(30) not null,
	Valor numeric(3,2) not null,
	Data date not null,
	Horario char(6) not null,
	Id char(10) not null,
	constraint ID_PECA_ID primary key (Nome, Data, Horario));

create table permite (
	Numero numeric(10) not null,
	Cpf char(14) not null,
	constraint ID_permite_ID primary key (Cpf, Numero));

create table PERSONAL_TRAINER (
	Cpf char(14) not null,
	Nome varchar(30) not null,
	Formacao varchar(30),
	Valor_Hora numeric(4,2) not null,
	constraint ID_PERSONAL_TRAINER_ID primary key (Cpf));

create table PISCINA (
	Numero numeric(10) not null,
	Tipo varchar(30) not null,
	Profundidade numeric(2,2) not null,
	Data_Ultima_Limpeza date not null,
	constraint ID_PISCI_DEPEN_ID primary key (Numero));

create table PRINCIPAL (
	CPF char(14) not null,
	Id char(10) not null,
	Forma_Pagamento varchar(30) not null,
	constraint ID_PRINC_HOSPE_ID primary key (CPF),
	constraint SID_PRINC_NOTA__ID unique (Id));

create table PRODUTO_FRIGOBAR (
	Id char(10) not null,
	Nome varchar(30) not null,
	Valor_Unidade numeric(3) not null,
	constraint ID_PRODUTO_FRIGOBAR_ID primary key (Id));

create table REDE (
	CNPJ char(18) not null,
	Nome_Real varchar(30) not null,
	Nome_Fantasia varchar(30) not null,
	constraint ID_REDE_ID primary key (CNPJ));

create table REDE_SOCIAL (
	Nome varchar(30) not null,
	Perfil varchar(30) not null,
	Numero_Seguidores numeric(8) not null,
	Media_Curtidas numeric(8) not null,
	YOUTUBE varchar(30),
	INSTAGRAM varchar(30),
	CNPJ char(18) not null,
	constraint ID_REDE_SOCIAL_ID primary key (Nome));

create table REFEICAO (
	Nome varchar(10) not null,
	Horario char(13) not null,
	Valor numeric(4,2) not null,
	constraint ID_REFEICAO_ID primary key (Nome));

create table REQUISICAO (
	Id varchar(10) not null,
	Unidade varchar(30) not null,
	Origem varchar(18) not null,
	Dependencia varchar(30) not null,
	Data_Inicio date not null,
	Data_Fim date,
	Classificacao varchar(30) not null,
	Complemento varchar(100) not null,
	Registro_Digital varchar(10) not null,
	CPF char(14) not null,
	constraint ID_REQUISICAO_ID primary key (Id));

create table reserva (
	Numero numeric(10) not null,
	CPF char(14) not null,
	Data_Check_In date not null,
	Data_Check_Out date not null,
	Pontos_Gerados numeric(6) not null,
	constraint ID_reserva_ID primary key (CPF, Numero));

create table RESTAURANTE (
	Numero numeric(10) not null,
	Capacidade_Maxima numeric(4) not null,
	Status varchar(30) not null,
	constraint ID_RESTA_DEPEN_ID primary key (Numero));

create table ROBO_SOCIAL (
	Id char(10) not null,
	Data_Ultima_Manutencao date not null,
	Status varchar(30) not null,
	constraint ID_ROBO_SOCIAL_ID primary key (Id));

create table SALA (
	Numero numeric(6) not null,
	Quantidade_Banheiros numeric(2),
	Cozinha char(1),
	Quantidade_Televisao numeric(2),
	Quantidade_Ventiladores numeric(2),
	Quantidade_Ar_Condicionado numeric(2) not null,
	constraint ID_SALA_ESPAC_ID primary key (Numero));

create table SALA_EVENTOS (
	Numero numeric(10) not null,
	Capacidade_Maxima numeric(5) not null,
	constraint ID_SALA__DEPEN_ID primary key (Numero));

create table SEGUIDOR (
	E_mail varchar(30) not null,
	Perfil varchar(30),
	Nome varchar(30),
	constraint ID_SEGUIDOR_ID primary key (E_mail));

create table SERVICO_DE_QUARTO (
	Id char(10) not null,
	Item varchar(30) not null,
	Data char(10) not null,
	Entregador varchar(30) not null,
	constraint ID_SERVI_COMPR_ID primary key (Id));

create table SESSAO_TERAPIA_OCUPACIONAL (
	Data date not null,
	Horario char(6) not null,
	Duracao varchar(6) not null,
	Objetivo varchar(30) not null,
	Capacidade_Maxima numeric(4) not null,
	Id char(10) not null,
	constraint ID_SESSAO_TERAPIA_OCUPACIONAL_ID primary key (Data, Horario));

create table SORTEIO (
	Id char(10) not null,
	Item varchar(20) not null,
	Quantidade numeric(2) not null,
	Data date not null,
	Horario varchar(6) not null,
	Nome varchar(30) not null,
	constraint ID_SORTEIO_ID primary key (Id));

create table SPA (
	Numero numeric(4) not null,
	Id char(10) not null,
	Nome varchar(30),
	Valor_dia numeric(4,2) not null,
	constraint ID_SPA_ID primary key (Numero),
	constraint SID_SPA_HOTEL_ID unique (Id));

create table TEATRO (
	Id char(10) not null,
	Capacidade_Maxima numeric(5) not null,
	constraint ID_TEATR_ESTAB_ID primary key (Id));

create table TRATAMENTO (
	Numero char(6) not null,
	Duracao varchar(6) not null,
	Exe_Numero numeric(4) not null,
	constraint ID_TRATAMENTO_ID primary key (Numero));

create table usado_para (
	Numero numeric(6) not null,
	Nome varchar(30) not null,
	constraint ID_usado_para_ID primary key (Numero, Nome));

create table USO (
	Nome varchar(30) not null,
	Classificacao_Indicativa varchar(5) not null,
	constraint ID_USO_ID primary key (Nome));

create table VAGA (
	For_Numero numeric(10) not null,
	Numero numeric(5) not null,
	Status varchar(20) not null,
	constraint ID_VAGA_ID primary key (For_Numero, Numero));

create table YOUTUBE (
	Nome varchar(30) not null,
	Frequencia_Videos varchar(10) not null,
	constraint ID_YOUTU_REDE__ID primary key (Nome));

alter table ACADEMIA add constraint FKDEP_ACA_FK
	foreign key (Numero)
	references DEPENDENCIA;

--alter table ACOMODACAO add constraint FKDEP_ACO_CHK
--	check(exists(select * from CALENDARIO where CALENDARIO.Numero = Numero));

alter table ACOMODACAO add constraint FKDEP_ACO_FK
	foreign key (Numero)
	references DEPENDENCIA;

alter table acumula add constraint FKacu_SEG
	foreign key (E_mail)
	references SEGUIDOR;

alter table acumula add constraint FKacu_RED_FK
	foreign key (Nome)
	references REDE_SOCIAL;

--alter table ALIMENTO add constraint ID_ALIMENTO_CHK
--	check(exists(select * from armazena where armazena.A_A_Id = Id));

alter table ALUGUEL add constraint FKpaga_FK
	foreign key (Pag_Id)
	references ESTABELECIMENTO;

alter table ALUGUEL add constraint FKdefine_FK
	foreign key (CNPJ)
	references REDE;

alter table AR_LIVRE add constraint FKESP_AR__FK
	foreign key (Numero)
	references ESPACO;

alter table armazena add constraint FKarm_HOT_FK
	foreign key (Id)
	references HOTEL;

alter table armazena add constraint FKarm_ALI
	foreign key (A_A_Id)
	references ALIMENTO;

alter table ASSALARIADO add constraint FKFUN_ASS_FK
	foreign key (CPF)
	references FUNCIONARIO;

alter table AUTORIZACAO add constraint FKnecessita_FK
	foreign key (Nec_Id)
	references ESTABELECIMENTO;

alter table AUTORIZACAO add constraint FKemitida_por_FK
	foreign key (CNPJ)
	references REDE;

alter table AUTONOMO add constraint FKFUN_AUT_FK
	foreign key (CPF)
	references FUNCIONARIO;

alter table BANHO_PET add constraint FKagrega_FK
	foreign key (Id)
	references HOTEL_PARA_PETS;

alter table beneficiado add constraint FKben_BEN_FK
	foreign key (Nome)
	references BENEFICIO;

alter table beneficiado add constraint FKben_ASS
	foreign key (CPF)
	references ASSALARIADO;

alter table Beneficiados add constraint FKres_Ben
	foreign key (CPF, Numero)
	references reserva;

--alter table BENEFICIO add constraint ID_BENEFICIO_CHK
--	check(exists(select * from beneficiado where beneficiado.Nome = Nome));

alter table CAFE_DA_MANHA add constraint FKCOM_CAF_FK
	foreign key (Id)
	references COMPRA;

alter table CALENDARIO add constraint FKsegue
	foreign key (Numero)
	references ACOMODACAO;

alter table CAMPANHA add constraint FKpromove_FK
	foreign key (Pro_Nome)
	references REDE_SOCIAL;

alter table CHATBOT add constraint FKintegra_FK
	foreign key (CNPJ)
	references REDE;

alter table COMPRA add constraint REF_COMPR_ACOMO_FK
	foreign key (Numero)
	references ACOMODACAO;

--alter table COMPRA add constraint EXCL_COMPRA
--	check((CAFE_DA_MANHA is not null and SERVICO_DE_QUARTO is null) or (CAFE_DA_MANHA is null and SERVICO_DE_QUARTO is not null) or (CAFE_DA_MANHA is null and SERVICO_DE_QUARTO is null));

alter table consome add constraint FKcon_PRO
	foreign key (Id)
	references PRODUTO_FRIGOBAR;

alter table consome add constraint FKcon_ACO_FK
	foreign key (Numero)
	references ACOMODACAO;

alter table DELIVERY add constraint FKfeito_por_FK
	foreign key (Fei_Id)
	references ROBO_SOCIAL;

alter table DELIVERY add constraint FKrecebe_FK
	foreign key (Numero)
	references ACOMODACAO;

--alter table DEPARTAMENTO add constraint ID_DEPARTAMENTO_CHK
--	check(exists(select * from FUNCIONARIO where FUNCIONARIO.Numero = Numero));

alter table DEPARTAMENTO add constraint FKcomposto_por_FK
	foreign key (Id)
	references HOTEL;

alter table DEPENDENTE add constraint FKHOS_DEP_FK
	foreign key (CPF)
	references HOSPEDE;

--alter table DEPENDENCIA add constraint EXCL_DEPENDENCIA
--	check((ACOMODACAO is not null and RESTAURANTE is null and SALA_EVENTOS is null and PISCINA is null and EMPRESA_TURISMO is null and ACADEMIA is null)           or (ACOMODACAO is null and RESTAURANTE is not null and SALA_EVENTOS is null and PISCINA is null and EMPRESA_TURISMO is null and ACADEMIA is null) or (ACOMODACAO is null and RESTAURANTE is null and SALA_EVENTOS is not null and PISCINA is null and EMPRESA_TURISMO is null and ACADEMIA is null) or (ACOMODACAO is null and RESTAURANTE is null and SALA_EVENTOS is null and PISCINA is not null and EMPRESA_TURISMO is null and ACADEMIA is null) or (ACOMODACAO is null and RESTAURANTE is null and SALA_EVENTOS is null and PISCINA is null and EMPRESA_TURISMO is not null and ACADEMIA is null) or (ACOMODACAO is null and RESTAURANTE is null and SALA_EVENTOS is null and PISCINA is null and EMPRESA_TURISMO is null and ACADEMIA is not null) or (ACOMODACAO is null and RESTAURANTE is null and SALA_EVENTOS is null and PISCINA is null and EMPRESA_TURISMO is null and ACADEMIA is null));

alter table DEPENDENCIA add constraint FKpossui_FK
	foreign key (Id)
	references HOTEL;

alter table DOCUMENTO add constraint FKe_referenciado_FK
	foreign key (e_r_Id)
	references PAGAMENTO;

alter table EMPRESA_TURISMO add constraint FKDEP_EMP_FK
	foreign key (Numero)
	references DEPENDENCIA;

--alter table ESPACO add constraint ID_ESPACO_CHK
--	check(exists(select * from usado_para where usado_para.Numero = Numero));

--alter table ESPACO add constraint EXCL_ESPACO
--	check((AR_LIVRE is not null and SALA is null) or (AR_LIVRE is null and SALA is not null) or (AR_LIVRE is null and SALA is null));

alter table ESPACO add constraint FKengloba_FK
	foreign key (Eng_Numero)
	references ESPACO_EVENTOS;

--alter table ESPACO_EVENTOS add constraint ID_ESPACO_EVENTOS_CHK
--	check(exists(select * from ESPACO where ESPACO.Eng_Numero = Numero));

alter table ESPACO_EVENTOS add constraint FKexiste_nele_FK
	foreign key (Id)
	references HOTEL;

--alter table ESTABELECIMENTO add constraint ID_ESTABELECIMENTO_CHK
--	check(exists(select * from AUTORIZACAO where AUTORIZACAO.Nec_Id = Id));

--alter table ESTABELECIMENTO add constraint ID_ESTABELECIMENTO_CHK
--	check(exists(select * from ALUGUEL where ALUGUEL.Pag_Id = Id));

--alter table ESTABELECIMENTO add constraint EXCL_ESTABELECIMENTO
--	check((LOCAL_ALIMENTACAO is not null and TEATRO is null and LOJA is null) or (LOCAL_ALIMENTACAO is null and TEATRO is not null and LOJA is null) or (LOCAL_ALIMENTACAO is null and TEATRO is null and LOJA is not null) or (LOCAL_ALIMENTACAO is null and TEATRO is null and LOJA is null));

alter table ESTABELECIMENTO add constraint FKtem_FK
	foreign key (Numero)
	references LOBBY;

alter table ESTADIA_ANTERIOR add constraint FKmantem_FK
	foreign key (CPF)
	references HOSPEDE;

alter table EVENTO add constraint FKsuporta_FK
	foreign key (Numero)
	references SALA_EVENTOS;

--alter table FUNCIONARIO add constraint EXCL_FUNCIONARIO
--	check((ASSALARIADO is not null and AUTONOMO is null) or (ASSALARIADO is null and AUTONOMO is not null) or (ASSALARIADO is null and AUTONOMO is null));

alter table FUNCIONARIO add constraint FKemprega_FK
	foreign key (Numero)
	references DEPARTAMENTO;

alter table GANHADOR add constraint FKvencido_por
	foreign key (Id)
	references SORTEIO;

--alter table GARAGEM add constraint ID_GARAGEM_CHK
--	check(exists(select * from VAGA where VAGA.For_Numero = Numero));

alter table GARAGEM add constraint FKconta_com_FK
	foreign key (Id)
	references HOTEL;

--alter table HOTEL add constraint ID_HOTEL_CHK
--	check(exists(select * from armazena where armazena.Id = Id));

--alter table HOTEL add constraint ID_HOTEL_CHK
--	check(exists(select * from DEPARTAMENTO where DEPARTAMENTO.Id = Id));

--alter table HOTEL add constraint ID_HOTEL_CHK
--	check(exists(select * from GARAGEM where GARAGEM.Id = Id));

--alter table HOTEL add constraint ID_HOTEL_CHK
--	check(exists(select * from ESPACO_EVENTOS where ESPACO_EVENTOS.Id = Id));

--alter table HOTEL add constraint ID_HOTEL_CHK
--	check(exists(select * from DEPENDENCIA where DEPENDENCIA.Id = Id));

alter table HOTEL add constraint FKcomposta_por_FK
	foreign key (CNPJ)
	references REDE;

alter table HOTEL_EMPRESARIAL add constraint FKHOT_HOT_2_FK
	foreign key (Id)
	references HOTEL;

alter table HOTEL_FAMILIAR add constraint FKHOT_HOT_FK
	foreign key (Id)
	references HOTEL;

alter table HOTEL_PARA_ADULTO add constraint FKHOT_HOT_3_FK
	foreign key (Id)
	references HOTEL;

alter table HOTEL_PARA_PETS add constraint FKHOT_HOT_1_FK
	foreign key (Id)
	references HOTEL;

--alter table HOSPEDE add constraint EXCL_HOSPEDE
--	check((PRINCIPAL is not null and DEPENDENTE is null) or (PRINCIPAL is null and DEPENDENTE is not null) or (PRINCIPAL is null and DEPENDENTE is null));

alter table HOSPEDE add constraint FKpode_contratar_FK
	foreign key (Pod_Cpf)
	references PERSONAL_TRAINER;

alter table HOSPEDE add constraint FKabriga_FK
	foreign key (CNPJ)
	references REDE;

--alter table INFLUENCIADOR_PARCEIRO add constraint ID_INFLUENCIADOR_PARCEIRO_CHK
--	check(exists(select * from e_divulgada_por where e_divulgada_por.Cpf = Cpf));

alter table INSTAGRAM add constraint FKRED_INS_FK
	foreign key (Nome)
	references REDE_SOCIAL;

alter table LIMPEZA_DE_PELE add constraint FKTRA_LIM_FK
	foreign key (Numero)
	references TRATAMENTO;

alter table LOBBY add constraint FKapresenta_FK
	foreign key (Id)
	references HOTEL;

alter table LOCAL_ALIMENTACAO add constraint FKEST_LOC_FK
	foreign key (Id)
	references ESTABELECIMENTO;

alter table LOJA add constraint FKEST_LOJ_FK
	foreign key (Id)
	references ESTABELECIMENTO;

alter table MASSAGEM add constraint FKTRA_MAS_FK
	foreign key (Numero)
	references TRATAMENTO;

--alter table NOTA_FISCAL add constraint ID_NOTA_FISCAL_CHK
--	check(exists(select * from PRINCIPAL where PRINCIPAL.Id = Id));

alter table NOTA_FISCAL add constraint FKemite_FK
	foreign key (CNPJ)
	references REDE;

--alter table PAGAMENTO add constraint ID_PAGAMENTO_CHK
--	check(exists(select * from DOCUMENTO where DOCUMENTO.e_r_Id = Id));

alter table PAGAMENTO add constraint FKefetua_FK
	foreign key (CNPJ)
	references REDE;

--alter table PERSONAL_TRAINER add constraint ID_PERSONAL_TRAINER_CHK
--	check(exists(select * from permite where permite.Cpf = Cpf));

alter table PECA add constraint FKestreia_FK
	foreign key (Id)
	references TEATRO;

alter table PISCINA add constraint FKDEP_PIS_FK
	foreign key (Numero)
	references DEPENDENCIA;

--alter table PRINCIPAL add constraint FKHOS_PRI_CHK
--	check(exists(select * from reserva where reserva.CPF = CPF));

alter table PRINCIPAL add constraint FKHOS_PRI_FK
	foreign key (CPF)
	references HOSPEDE;

alter table PRINCIPAL add constraint FKcobra_FK
	foreign key (Id)
	references NOTA_FISCAL;

--alter table REDE add constraint ID_REDE_CHK
--	check(exists(select * from HOSPEDE where HOSPEDE.CNPJ = CNPJ));

--alter table REDE add constraint ID_REDE_CHK
--	check(exists(select * from HOTEL where HOTEL.CNPJ = CNPJ));

--alter table REDE add constraint ID_REDE_CHK
--	check(exists(select * from PAGAMENTO where PAGAMENTO.CNPJ = CNPJ));

--alter table REDE add constraint ID_REDE_CHK
--	check(exists(select * from NOTA_FISCAL where NOTA_FISCAL.CNPJ = CNPJ));

--alter table REDE add constraint ID_REDE_CHK
--	check(exists(select * from CHATBOT where CHATBOT.CNPJ = CNPJ));

--alter table REDE_SOCIAL add constraint ID_REDE_SOCIAL_CHK
--	check(exists(select * from CAMPANHA where CAMPANHA.Pro_Nome = Nome));

--alter table REDE_SOCIAL add constraint EXCL_REDE_SOCIAL
--	check((INSTAGRAM is not null and YOUTUBE is null) or (INSTAGRAM is null and YOUTUBE is not null) or (INSTAGRAM is null and YOUTUBE is null));

alter table REDE_SOCIAL add constraint FKdesenvolve_FK
	foreign key (CNPJ)
	references REDE;

--alter table REFEICAO add constraint ID_REFEICAO_CHK
--	check(exists(select * from oferece where oferece.Nome = Nome));

alter table REQUISICAO add constraint FKgera_FK
	foreign key (Registro_Digital)
	references CHATBOT;

alter table REQUISICAO add constraint FKatendida_por_FK
	foreign key (CPF)
	references FUNCIONARIO;

--alter table RESTAURANTE add constraint FKDEP_RES_CHK
--	check(exists(select * from oferece where oferece.Numero = Numero));

alter table RESTAURANTE add constraint FKDEP_RES_FK
	foreign key (Numero)
	references DEPENDENCIA;

alter table SALA add constraint FKESP_SAL_FK
	foreign key (Numero)
	references ESPACO;

alter table SALA_EVENTOS add constraint FKDEP_SAL_FK
	foreign key (Numero)
	references DEPENDENCIA;

--alter table SEGUIDOR add constraint ID_SEGUIDOR_CHK
--	check(exists(select * from acumula where acumula.E_mail = E_mail));

alter table SERVICO_DE_QUARTO add constraint FKCOM_SER_FK
	foreign key (Id)
	references COMPRA;

alter table SESSAO_TERAPIA_OCUPACIONAL add constraint FKdispoe_FK
	foreign key (Id)
	references HOTEL;

--alter table SORTEIO add constraint ID_SORTEIO_CHK
--	check(exists(select * from GANHADOR where GANHADOR.Id = Id));

alter table SORTEIO add constraint FKrealiza_FK
	foreign key (Nome)
	references REDE_SOCIAL;

alter table SPA add constraint FKcontem_FK
	foreign key (Id)
	references HOTEL;

--alter table TEATRO add constraint FKEST_TEA_CHK
--	check(exists(select * from PECA where PECA.Id = Id));

alter table TEATRO add constraint FKEST_TEA_FK
	foreign key (Id)
	references ESTABELECIMENTO;

alter table TRATAMENTO add constraint FKexecuta_FK
	foreign key (Exe_Numero)
	references SPA;

--alter table USO add constraint ID_USO_CHK
--	check(exists(select * from usado_para where usado_para.Nome = Nome));

alter table VAGA add constraint FKformada_por
	foreign key (For_Numero)
	references GARAGEM;

alter table dispoe_de add constraint FKdis_AME
	foreign key (Tipo)
	references AMENIDADE;

alter table dispoe_de add constraint FKdis_ACO_FK
	foreign key (Numero)
	references ACOMODACAO;

alter table faz add constraint FKfaz_COM
	foreign key (Id)
	references COMPRA;

alter table faz add constraint FKfaz_ACO_FK
	foreign key (Numero)
	references ACOMODACAO;

alter table inclui add constraint FKinc_VAG_FK
	foreign key (For_Numero, Numero)
	references VAGA;

alter table inclui add constraint FKinc_ACO_FK
	foreign key (I_A_Numero)
	references ACOMODACAO;

alter table oferece add constraint FKofe_REF
	foreign key (Nome)
	references REFEICAO;

alter table oferece add constraint FKofe_RES_FK
	foreign key (Numero)
	references RESTAURANTE;

alter table permite add constraint FKper_PER
	foreign key (Cpf)
	references PERSONAL_TRAINER;

alter table permite add constraint FKper_ACA_FK
	foreign key (Numero)
	references ACADEMIA;

--alter table reserva add constraint ID_reserva_CHK
--	check(exists(select * from Beneficiados where Beneficiados.CPF = CPF and Beneficiados.Numero = Numero));

alter table reserva add constraint FKres_PRI
	foreign key (CPF)
	references PRINCIPAL;

alter table reserva add constraint FKres_ACO_FK
	foreign key (Numero)	
	references ACOMODACAO;

alter table usado_para add constraint FKusa_USO_FK
	foreign key (Nome)
	references USO;

alter table usado_para add constraint FKusa_ESP
	foreign key (Numero)
	references ESPACO;

alter table YOUTUBE add constraint FKRED_YOU_FK
	foreign key (Nome)
	references REDE_SOCIAL;

alter table e_divulgada_por add constraint FKe_d_RED_FK
	foreign key (Nome)
	references REDE_SOCIAL;

alter table e_divulgada_por add constraint FKe_d_INF
	foreign key (Cpf)
	references INFLUENCIADOR_PARCEIRO;